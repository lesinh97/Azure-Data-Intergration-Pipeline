{
	"name": "DF Aggregate Data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "payroll_ds",
						"type": "DatasetReference"
					},
					"name": "payroll"
				},
				{
					"dataset": {
						"referenceName": "history_payroll",
						"type": "DatasetReference"
					},
					"name": "historypayroll"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "NYC_Payroll_Summary",
						"type": "DatasetReference"
					},
					"name": "sinkNYCPayrollSummary"
				}
			],
			"transformations": [
				{
					"name": "CombinePayrollData"
				},
				{
					"name": "FilterFiscalYear"
				},
				{
					"name": "TotalPaid"
				},
				{
					"name": "AggregateData"
				}
			],
			"scriptLines": [
				"parameters{",
				"     fiscalyear as integer",
				"}",
				"source(output(",
				"          FiscalYear as string,",
				"          PayrollNumber as string,",
				"          AgencyCode as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as string,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as string,",
				"          PayBasis as string,",
				"          RegularHours as string,",
				"          RegularGrossPaid as string,",
				"          OTHours as string,",
				"          TotalOTPaid as string,",
				"          TotalOtherPay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> payroll",
				"source(output(",
				"          FiscalYear as string,",
				"          PayrollNumber as string,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as string,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as string,",
				"          PayBasis as string,",
				"          RegularHours as string,",
				"          RegularGrossPaid as string,",
				"          OTHours as string,",
				"          TotalOTPaid as string,",
				"          TotalOtherPay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> historypayroll",
				"payroll, historypayroll union(byName: false)~> CombinePayrollData",
				"CombinePayrollData filter(toInteger(FiscalYear) >= $fiscalyear) ~> FilterFiscalYear",
				"FilterFiscalYear derive(TotalPaid = toFloat(RegularGrossPaid) + toFloat(TotalOTPaid) + toFloat(TotalOtherPay)) ~> TotalPaid",
				"TotalPaid aggregate(groupBy(FiscalYear,",
				"          AgencyName),",
				"     TotalPaid = sum(toFloat(TotalPaid))) ~> AggregateData",
				"AggregateData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as integer,",
				"          AgencyName as string,",
				"          TotalPaid as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinkNYCPayrollSummary"
			]
		}
	}
}